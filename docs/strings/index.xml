<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Strings on Binary Stars</title>
    <link>https://itssamuelrowe.github.io/binarystars/strings/</link>
    <description>Recent content in Strings on Binary Stars</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://itssamuelrowe.github.io/binarystars/strings/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Understanding Strings</title>
      <link>https://itssamuelrowe.github.io/binarystars/strings/understanding-strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://itssamuelrowe.github.io/binarystars/strings/understanding-strings/</guid>
      <description>In Java, strings are not primitive types. The string is implemented by the String class defined in the java.lang package. All strings are objects, but Java treats strings specially.
A string is a sequence of characters. You can create a string by enclosing your text in double quotes. The character sequence along with the double quotes form a string literal.
Unlike many other programming languages, string are not arrays of characters.</description>
    </item>
    
    <item>
      <title>Constructors of the String Class</title>
      <link>https://itssamuelrowe.github.io/binarystars/strings/constructors-of-the-string-class/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://itssamuelrowe.github.io/binarystars/strings/constructors-of-the-string-class/</guid>
      <description>The String class exposes many constructors.
You can create an empty string by calling the default constructor. An empty string basically contains no characters.
Here is an example.
String emtpyString = new String();  The String class implements a constructor which accepts an array of characters. This allows you to create a string from an array of characters.
String(char[] sequence)  Here is an example which demonstrates how you can create strings using arrays.</description>
    </item>
    
    <item>
      <title>Determining the Length of Strings</title>
      <link>https://itssamuelrowe.github.io/binarystars/strings/determining-the-length-of-strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://itssamuelrowe.github.io/binarystars/strings/determining-the-length-of-strings/</guid>
      <description>You can determine the length of a string using the length() method. The length of a string is basically the number of characters it contains.
Here is an example which prints the length of a string.
String name = &amp;quot;Shazam&amp;quot;; int length = name.length(); System.out.println(length);  The length of a string is an imoprtant value when you want to manipulate strings.</description>
    </item>
    
    <item>
      <title>Comparing Strings</title>
      <link>https://itssamuelrowe.github.io/binarystars/strings/comparing-strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://itssamuelrowe.github.io/binarystars/strings/comparing-strings/</guid>
      <description>You cannot compare two strings for equality using the equality operator (==). Remember strings are objects therefore you need to use the equals() method to compare two strings for equality.
The declaration of the equals method is shown here.
boolean equals(Object other)  It returns true if both the strings contain the same characters in the same order; false otherwise. You need to remember that this method is case sensistive. For example, if you compare &amp;ldquo;Batman&amp;rdquo; and &amp;ldquo;batman&amp;rdquo; for equality, it would return false.</description>
    </item>
    
    <item>
      <title>Extract Characters From Strings</title>
      <link>https://itssamuelrowe.github.io/binarystars/strings/extracting-characters-from-strings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://itssamuelrowe.github.io/binarystars/strings/extracting-characters-from-strings/</guid>
      <description>You can extract characters from strings in a number of ways. We discuss about each technique in this section.
Internally, strings store characters in an array. However, you cannot access the characters of the string using the array subscript operator. But many methods in the String class require indexes to operate. Just like array, string indexes are zero based. So it would help you to understand strings better if you think of them as arrays.</description>
    </item>
    
  </channel>
</rss>